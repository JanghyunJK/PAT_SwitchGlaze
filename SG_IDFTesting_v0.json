{
  "analysis": {
    "display_name": "SG_IDFTesting_v0",
    "name": "SG_IDFTesting_v0",
    "output_variables": [
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "total_pv",
        "display_name_short": "total_pv",
        "metadata_id": null,
        "name": "window_pv_reporting.total_pv",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_area_ft",
        "display_name_short": "building_area_ft",
        "metadata_id": null,
        "name": "window_pv_reporting.building_area_ft",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "capacity_factor",
        "display_name_short": "capacity_factor",
        "metadata_id": null,
        "name": "window_pv_reporting.capacity_factor",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "total_electricity",
        "display_name_short": "total_electricity",
        "metadata_id": null,
        "name": "window_pv_reporting.total_electricity",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "total_electricity_heating",
        "display_name_short": "total_electricity_heating",
        "metadata_id": null,
        "name": "window_pv_reporting.total_electricity_heating",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "total_electricity_cooling",
        "display_name_short": "total_electricity_cooling",
        "metadata_id": null,
        "name": "window_pv_reporting.total_electricity_cooling",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "total_electricity_lighting",
        "display_name_short": "total_electricity_lighting",
        "metadata_id": null,
        "name": "window_pv_reporting.total_electricity_lighting",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "total_gas",
        "display_name_short": "total_gas",
        "metadata_id": null,
        "name": "window_pv_reporting.total_gas",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "total_gas_heating",
        "display_name_short": "total_gas_heating",
        "metadata_id": null,
        "name": "window_pv_reporting.total_gas_heating",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "panel_dc_gen_jan",
        "display_name_short": "panel_dc_gen_jan",
        "metadata_id": null,
        "name": "window_pv_reporting.panel_dc_gen_jan",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "panel_dc_gen_feb",
        "display_name_short": "panel_dc_gen_feb",
        "metadata_id": null,
        "name": "window_pv_reporting.panel_dc_gen_feb",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "panel_dc_gen_mar",
        "display_name_short": "panel_dc_gen_mar",
        "metadata_id": null,
        "name": "window_pv_reporting.panel_dc_gen_mar",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "panel_dc_gen_apr",
        "display_name_short": "panel_dc_gen_apr",
        "metadata_id": null,
        "name": "window_pv_reporting.panel_dc_gen_apr",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "panel_dc_gen_may",
        "display_name_short": "panel_dc_gen_may",
        "metadata_id": null,
        "name": "window_pv_reporting.panel_dc_gen_may",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "panel_dc_gen_jun",
        "display_name_short": "panel_dc_gen_jun",
        "metadata_id": null,
        "name": "window_pv_reporting.panel_dc_gen_jun",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "panel_dc_gen_jul",
        "display_name_short": "panel_dc_gen_jul",
        "metadata_id": null,
        "name": "window_pv_reporting.panel_dc_gen_jul",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "panel_dc_gen_aug",
        "display_name_short": "panel_dc_gen_aug",
        "metadata_id": null,
        "name": "window_pv_reporting.panel_dc_gen_aug",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "panel_dc_gen_sep",
        "display_name_short": "panel_dc_gen_sep",
        "metadata_id": null,
        "name": "window_pv_reporting.panel_dc_gen_sep",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "panel_dc_gen_oct",
        "display_name_short": "panel_dc_gen_oct",
        "metadata_id": null,
        "name": "window_pv_reporting.panel_dc_gen_oct",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "panel_dc_gen_nov",
        "display_name_short": "panel_dc_gen_nov",
        "metadata_id": null,
        "name": "window_pv_reporting.panel_dc_gen_nov",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "panel_dc_gen_dec",
        "display_name_short": "panel_dc_gen_dec",
        "metadata_id": null,
        "name": "window_pv_reporting.panel_dc_gen_dec",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "light_energy_jan",
        "display_name_short": "light_energy_jan",
        "metadata_id": null,
        "name": "window_pv_reporting.light_energy_jan",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "light_energy_feb",
        "display_name_short": "light_energy_feb",
        "metadata_id": null,
        "name": "window_pv_reporting.light_energy_feb",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "light_energy_mar",
        "display_name_short": "light_energy_mar",
        "metadata_id": null,
        "name": "window_pv_reporting.light_energy_mar",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "light_energy_apr",
        "display_name_short": "light_energy_apr",
        "metadata_id": null,
        "name": "window_pv_reporting.light_energy_apr",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "light_energy_may",
        "display_name_short": "light_energy_may",
        "metadata_id": null,
        "name": "window_pv_reporting.light_energy_may",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "light_energy_jun",
        "display_name_short": "light_energy_jun",
        "metadata_id": null,
        "name": "window_pv_reporting.light_energy_jun",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "light_energy_jul",
        "display_name_short": "light_energy_jul",
        "metadata_id": null,
        "name": "window_pv_reporting.light_energy_jul",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "light_energy_aug",
        "display_name_short": "light_energy_aug",
        "metadata_id": null,
        "name": "window_pv_reporting.light_energy_aug",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "light_energy_sep",
        "display_name_short": "light_energy_sep",
        "metadata_id": null,
        "name": "window_pv_reporting.light_energy_sep",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "light_energy_oct",
        "display_name_short": "light_energy_oct",
        "metadata_id": null,
        "name": "window_pv_reporting.light_energy_oct",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "light_energy_nov",
        "display_name_short": "light_energy_nov",
        "metadata_id": null,
        "name": "window_pv_reporting.light_energy_nov",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "light_energy_dec",
        "display_name_short": "light_energy_dec",
        "metadata_id": null,
        "name": "window_pv_reporting.light_energy_dec",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_elec_jan",
        "display_name_short": "building_elec_jan",
        "metadata_id": null,
        "name": "window_pv_reporting.building_elec_jan",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_elec_feb",
        "display_name_short": "building_elec_feb",
        "metadata_id": null,
        "name": "window_pv_reporting.building_elec_feb",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_elec_mar",
        "display_name_short": "building_elec_mar",
        "metadata_id": null,
        "name": "window_pv_reporting.building_elec_mar",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_elec_apr",
        "display_name_short": "building_elec_apr",
        "metadata_id": null,
        "name": "window_pv_reporting.building_elec_apr",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_elec_may",
        "display_name_short": "building_elec_may",
        "metadata_id": null,
        "name": "window_pv_reporting.building_elec_may",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_elec_jun",
        "display_name_short": "building_elec_jun",
        "metadata_id": null,
        "name": "window_pv_reporting.building_elec_jun",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_elec_jul",
        "display_name_short": "building_elec_jul",
        "metadata_id": null,
        "name": "window_pv_reporting.building_elec_jul",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_elec_aug",
        "display_name_short": "building_elec_aug",
        "metadata_id": null,
        "name": "window_pv_reporting.building_elec_aug",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_elec_sep",
        "display_name_short": "building_elec_sep",
        "metadata_id": null,
        "name": "window_pv_reporting.building_elec_sep",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_elec_oct",
        "display_name_short": "building_elec_oct",
        "metadata_id": null,
        "name": "window_pv_reporting.building_elec_oct",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_elec_nov",
        "display_name_short": "building_elec_nov",
        "metadata_id": null,
        "name": "window_pv_reporting.building_elec_nov",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_elec_dec",
        "display_name_short": "building_elec_dec",
        "metadata_id": null,
        "name": "window_pv_reporting.building_elec_dec",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_gas_jan",
        "display_name_short": "building_gas_jan",
        "metadata_id": null,
        "name": "window_pv_reporting.building_gas_jan",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_gas_feb",
        "display_name_short": "building_gas_feb",
        "metadata_id": null,
        "name": "window_pv_reporting.building_gas_feb",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_gas_mar",
        "display_name_short": "building_gas_mar",
        "metadata_id": null,
        "name": "window_pv_reporting.building_gas_mar",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_gas_apr",
        "display_name_short": "building_gas_apr",
        "metadata_id": null,
        "name": "window_pv_reporting.building_gas_apr",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_gas_may",
        "display_name_short": "building_gas_may",
        "metadata_id": null,
        "name": "window_pv_reporting.building_gas_may",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_gas_jun",
        "display_name_short": "building_gas_jun",
        "metadata_id": null,
        "name": "window_pv_reporting.building_gas_jun",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_gas_jul",
        "display_name_short": "building_gas_jul",
        "metadata_id": null,
        "name": "window_pv_reporting.building_gas_jul",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_gas_aug",
        "display_name_short": "building_gas_aug",
        "metadata_id": null,
        "name": "window_pv_reporting.building_gas_aug",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_gas_sep",
        "display_name_short": "building_gas_sep",
        "metadata_id": null,
        "name": "window_pv_reporting.building_gas_sep",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_gas_oct",
        "display_name_short": "building_gas_oct",
        "metadata_id": null,
        "name": "window_pv_reporting.building_gas_oct",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_gas_nov",
        "display_name_short": "building_gas_nov",
        "metadata_id": null,
        "name": "window_pv_reporting.building_gas_nov",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      },
      {
        "objective_function": false,
        "objective_function_index": null,
        "objective_function_target": null,
        "objective_function_group": null,
        "scaling_factor": null,
        "display_name": "building_gas_dec",
        "display_name_short": "building_gas_dec",
        "metadata_id": null,
        "name": "window_pv_reporting.building_gas_dec",
        "visualize": true,
        "export": true,
        "variable_type": "double"
      }
    ],
    "problem": {
      "workflow": [
        {
          "name": "create_bar_from_building_type_ratios",
          "display_name": "Create Bar From Building Type Ratios",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "CreateBarFromBuildingTypeRatios",
          "measure_definition_directory": "./measures/create_bar_from_building_type_ratios",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\create_bar_from_building_type_ratios",
          "measure_definition_display_name": "Create Bar From Building Type Ratios",
          "measure_definition_name": "create_bar_from_building_type_ratios",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "6e3a14f8-c3c7-4e03-bc51-bef8a52e1a05",
          "measure_definition_version_uuid": "2424b90a-9e47-41c2-a701-59473c167219",
          "uuid": "6e3a14f8-c3c7-4e03-bc51-bef8a52e1a05",
          "version_uuid": "2424b90a-9e47-41c2-a701-59473c167219",
          "description": "Create a core and perimeter bar sliced by space type.",
          "taxonomy": "Envelope.Form",
          "arguments": [
            {
              "display_name": "Primary Building Type",
              "display_name_short": "bldg_type_a",
              "name": "bldg_type_a",
              "value_type": "string",
              "default_value": "SmallOffice",
              "value": "MediumOffice"
            },
            {
              "display_name": "Primary Building Type Number of Units",
              "display_name_short": "bldg_type_a_num_units",
              "name": "bldg_type_a_num_units",
              "value_type": "integer",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "Building Type B",
              "display_name_short": "bldg_type_b",
              "name": "bldg_type_b",
              "value_type": "string",
              "default_value": "SmallOffice",
              "value": "SmallOffice"
            },
            {
              "display_name": "Building Type B Fraction of Building Floor Area",
              "display_name_short": "bldg_type_b_fract_bldg_area",
              "name": "bldg_type_b_fract_bldg_area",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Building Type B Number of Units",
              "display_name_short": "bldg_type_b_num_units",
              "name": "bldg_type_b_num_units",
              "value_type": "integer",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "Building Type C",
              "display_name_short": "bldg_type_c",
              "name": "bldg_type_c",
              "value_type": "string",
              "default_value": "SmallOffice",
              "value": "SmallOffice"
            },
            {
              "display_name": "Building Type C Fraction of Building Floor Area",
              "display_name_short": "bldg_type_c_fract_bldg_area",
              "name": "bldg_type_c_fract_bldg_area",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Building Type C Number of Units",
              "display_name_short": "bldg_type_c_num_units",
              "name": "bldg_type_c_num_units",
              "value_type": "integer",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "Building Type D",
              "display_name_short": "bldg_type_d",
              "name": "bldg_type_d",
              "value_type": "string",
              "default_value": "SmallOffice",
              "value": "SmallOffice"
            },
            {
              "display_name": "Building Type D Fraction of Building Floor Area",
              "display_name_short": "bldg_type_d_fract_bldg_area",
              "name": "bldg_type_d_fract_bldg_area",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Building Type D Number of Units",
              "display_name_short": "bldg_type_d_num_units",
              "name": "bldg_type_d_num_units",
              "value_type": "integer",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "Single Floor Area",
              "display_name_short": "single_floor_area",
              "name": "single_floor_area",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Total Building Floor Area",
              "display_name_short": "total_bldg_floor_area",
              "name": "total_bldg_floor_area",
              "value_type": "double",
              "default_value": 10000,
              "value": 10000
            },
            {
              "display_name": "Typical Floor to FLoor Height",
              "display_name_short": "floor_height",
              "name": "floor_height",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Number of Stories Above Grade",
              "display_name_short": "num_stories_above_grade",
              "name": "num_stories_above_grade",
              "value_type": "double",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "Number of Stories Below Grade",
              "display_name_short": "num_stories_below_grade",
              "name": "num_stories_below_grade",
              "value_type": "integer",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Building Rotation",
              "display_name_short": "building_rotation",
              "name": "building_rotation",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Target Standard",
              "display_name_short": "template",
              "name": "template",
              "value_type": "string",
              "default_value": "90.1-2004",
              "value": "90.1-2013"
            },
            {
              "display_name": "Ratio of North/South Facade Length Relative to East/West Facade Length.",
              "display_name_short": "ns_to_ew_ratio",
              "name": "ns_to_ew_ratio",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Fraction of Exterior Wall Area with Adjacent Structure",
              "display_name_short": "party_wall_fraction",
              "name": "party_wall_fraction",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Number of North facing stories with party wall",
              "display_name_short": "party_wall_stories_north",
              "name": "party_wall_stories_north",
              "value_type": "integer",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Number of South facing stories with party wall",
              "display_name_short": "party_wall_stories_south",
              "name": "party_wall_stories_south",
              "value_type": "integer",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Number of East facing stories with party wall",
              "display_name_short": "party_wall_stories_east",
              "name": "party_wall_stories_east",
              "value_type": "integer",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Number of West facing stories with party wall",
              "display_name_short": "party_wall_stories_west",
              "name": "party_wall_stories_west",
              "value_type": "integer",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Is the Bottom Story Exposed to Ground?",
              "display_name_short": "bottom_story_ground_exposed_floor",
              "name": "bottom_story_ground_exposed_floor",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Is the Top Story an Exterior Roof?",
              "display_name_short": "top_story_exterior_exposed_roof",
              "name": "top_story_exterior_exposed_roof",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Calculation Method for Story Multiplier",
              "display_name_short": "story_multiplier",
              "name": "story_multiplier",
              "value_type": "string",
              "default_value": "Basements Ground Mid Top",
              "value": "Basements Ground Mid Top"
            },
            {
              "display_name": "Division Method for Bar Space Types.",
              "display_name_short": "bar_division_method",
              "name": "bar_division_method",
              "value_type": "string",
              "default_value": "Multiple Space Types - Individual Stories Sliced",
              "value": "Single Space Type - Core and Perimeter"
            },
            {
              "display_name": "Make Mid Story Floor Surfaces Adibatic",
              "display_name_short": "make_mid_story_surfaces_adiabatic",
              "name": "make_mid_story_surfaces_adiabatic",
              "value_type": "boolean",
              "default_value": false,
              "value": false
            },
            {
              "display_name": "Use Upstream Argument Values",
              "display_name_short": "use_upstream_args",
              "name": "use_upstream_args",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            }
          ],
          "variables": [
            {
              "argument": {
                "display_name": "Window to Wall Ratio.",
                "display_name_short": "wwr",
                "name": "wwr",
                "value_type": "double",
                "default_value": 0,
                "value": 0.4
              },
              "display_name": "Window to Wall Ratio.",
              "display_name_short": "wwr",
              "variable_type": "variable",
              "units": "",
              "minimum": 0,
              "maximum": 0,
              "static_value": 0.4,
              "uuid": "",
              "version_uuid": "",
              "variable": true,
              "uncertainty_description": {
                "type": "discrete",
                "attributes": [
                  {
                    "name": "discrete",
                    "values_and_weights": [
                      {
                        "value": 0.4,
                        "weight": 0.33
                      },
                      {
                        "value": 0.65,
                        "weight": 0.33
                      },
                      {
                        "value": 0.9,
                        "weight": 0.34
                      }
                    ]
                  },
                  {
                    "name": "lower_bounds",
                    "value": 0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 0
                  },
                  {
                    "name": "modes",
                    "value": 0
                  },
                  {
                    "name": "delta_x",
                    "value": 0
                  },
                  {
                    "name": "stddev",
                    "value": 0
                  }
                ]
              },
              "workflow_index": 0
            }
          ],
          "workflow_index": 0
        },
        {
          "name": "change_building_location",
          "display_name": "ChangeBuildingLocation",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "ChangeBuildingLocation",
          "measure_definition_directory": "./measures/ChangeBuildingLocation",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\ChangeBuildingLocation",
          "measure_definition_display_name": "ChangeBuildingLocation",
          "measure_definition_name": "change_building_location",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "d4db4971-f5ba-11e3-a3ac-0800200c9a66",
          "measure_definition_version_uuid": "a8ac51ba-48b0-44dc-ae78-b7fc5a659ea1",
          "uuid": "d4db4971-f5ba-11e3-a3ac-0800200c9a66",
          "version_uuid": "a8ac51ba-48b0-44dc-ae78-b7fc5a659ea1",
          "description": "Change the building location",
          "taxonomy": "Whole Building.Space Types",
          "arguments": [
            {
              "display_name": "Climate Zone.",
              "display_name_short": "climate_zone",
              "name": "climate_zone",
              "value_type": "string",
              "default_value": "Lookup From Stat File",
              "value": "Lookup From Stat File"
            },
            {
              "display_name": "Set Calendar Year",
              "display_name_short": "set_year",
              "name": "set_year",
              "value_type": "integer",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Use Upstream Argument Values",
              "display_name_short": "use_upstream_args",
              "name": "use_upstream_args",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            }
          ],
          "variables": [
            {
              "argument": {
                "display_name": "Weather File Name",
                "display_name_short": "weather_file_name",
                "name": "weather_file_name",
                "value_type": "string",
                "default_value": "SAU_Riyadh.404380_IWEC.epw",
                "value": "SAU_Riyadh.404380_IWEC.epw"
              },
              "display_name": "Weather File Name",
              "display_name_short": "weather_file_name",
              "variable_type": "variable",
              "units": "",
              "minimum": "",
              "maximum": "",
              "static_value": "SAU_Riyadh.404380_IWEC.epw",
              "uuid": "",
              "version_uuid": "",
              "variable": true,
              "uncertainty_description": {
                "type": "discrete",
                "attributes": [
                  {
                    "name": "discrete",
                    "values_and_weights": [
                      {
                        "value": "SAU_Riyadh.404380_IWEC.epw",
                        "weight": 0.33
                      },
                      {
                        "value": "USA_AK_Fairbanks.Intl.AP.702610_TMY3.epw",
                        "weight": 0.33
                      },
                      {
                        "value": "USA_CA_San.Diego-Lindbergh.Field.722900_TMY3.epw",
                        "weight": 0.34
                      }
                    ]
                  },
                  {
                    "name": "lower_bounds",
                    "value": ""
                  },
                  {
                    "name": "upper_bounds",
                    "value": ""
                  },
                  {
                    "name": "modes",
                    "value": ""
                  },
                  {
                    "name": "delta_x",
                    "value": ""
                  },
                  {
                    "name": "stddev",
                    "value": ""
                  }
                ]
              },
              "workflow_index": 0
            }
          ],
          "workflow_index": 1
        },
        {
          "name": "create_typical_building_from_model",
          "display_name": "Create Typical Building from Model",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "CreateTypicalBuildingFromModel",
          "measure_definition_directory": "./measures/create_typical_building_from_model",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\create_typical_building_from_model",
          "measure_definition_display_name": "Create Typical Building from Model",
          "measure_definition_name": "create_typical_building_from_model",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "339a2e3a-273c-4494-bb50-bfe586a0647c",
          "measure_definition_version_uuid": "087d38a1-90d2-428a-9eb1-2587ed205185",
          "uuid": "339a2e3a-273c-4494-bb50-bfe586a0647c",
          "version_uuid": "087d38a1-90d2-428a-9eb1-2587ed205185",
          "description": "Takes a model with space and stub space types, and assigns constructions, schedules, internal loads, hvac, and other loads such as exterior lights and service water heating. The end result is somewhat like a custom protptye model with user geometry, but it may use different HVAC systems.",
          "taxonomy": "Whole Building.Space Types",
          "arguments": [
            {
              "display_name": "Target Standard",
              "display_name_short": "template",
              "name": "template",
              "value_type": "string",
              "default_value": "90.1-2010",
              "value": "90.1-2013"
            },
            {
              "display_name": "HVAC System Type",
              "display_name_short": "system_type",
              "name": "system_type",
              "value_type": "string",
              "default_value": "Inferred",
              "value": "Inferred"
            },
            {
              "display_name": "HVAC System Delivery Type",
              "display_name_short": "hvac_delivery_type",
              "name": "hvac_delivery_type",
              "value_type": "string",
              "default_value": "Forced Air",
              "value": "Forced Air"
            },
            {
              "display_name": "HVAC Heating Source",
              "display_name_short": "htg_src",
              "name": "htg_src",
              "value_type": "string",
              "default_value": "NaturalGas",
              "value": "NaturalGas"
            },
            {
              "display_name": "HVAC Cooling Source",
              "display_name_short": "clg_src",
              "name": "clg_src",
              "value_type": "string",
              "default_value": "Electricity",
              "value": "Electricity"
            },
            {
              "display_name": "Kitchen Exhaust MakeUp Air Calculation Method",
              "display_name_short": "kitchen_makeup",
              "name": "kitchen_makeup",
              "value_type": "string",
              "default_value": "Adjacent",
              "value": "None"
            },
            {
              "display_name": "Exterior Lighting Zone",
              "display_name_short": "exterior_lighting_zone",
              "name": "exterior_lighting_zone",
              "value_type": "string",
              "default_value": "3 - All Other Areas",
              "value": "3 - All Other Areas"
            },
            {
              "display_name": "Add Constructions to Model",
              "display_name_short": "add_constructions",
              "name": "add_constructions",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Add Space Type Loads to Model",
              "display_name_short": "add_space_type_loads",
              "name": "add_space_type_loads",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Add Elevators to Model",
              "display_name_short": "add_elevators",
              "name": "add_elevators",
              "value_type": "boolean",
              "default_value": true,
              "value": false
            },
            {
              "display_name": "Add Exterior Lights to Model",
              "display_name_short": "add_exterior_lights",
              "name": "add_exterior_lights",
              "value_type": "boolean",
              "default_value": true,
              "value": false
            },
            {
              "display_name": "Onsite Parking Fraction",
              "display_name_short": "onsite_parking_fraction",
              "name": "onsite_parking_fraction",
              "value_type": "double",
              "default_value": 1,
              "value": 0
            },
            {
              "display_name": "Add Exhaust Fans to Model",
              "display_name_short": "add_exhaust",
              "name": "add_exhaust",
              "value_type": "boolean",
              "default_value": true,
              "value": false
            },
            {
              "display_name": "Add Service Water Heating to Model",
              "display_name_short": "add_swh",
              "name": "add_swh",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Add Thermostats",
              "display_name_short": "add_thermostat",
              "name": "add_thermostat",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Add HVAC System to Model",
              "display_name_short": "add_hvac",
              "name": "add_hvac",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Clean Model of non-gemoetry objects",
              "display_name_short": "remove_objects",
              "name": "remove_objects",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Use Upstream Argument Values",
              "display_name_short": "use_upstream_args",
              "name": "use_upstream_args",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Enable Daylight Savings.",
              "display_name_short": "enable_dst",
              "name": "enable_dst",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            }
          ],
          "variables": [],
          "workflow_index": 2
        },
        {
          "name": "add_redirecting_bipv",
          "display_name": "Add Redirecting BIPV1",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "AddRedirectingBipv",
          "measure_definition_directory": "./measures/add_redirecting_bipv",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\add_redirecting_bipv",
          "measure_definition_display_name": "Add Redirecting BIPV1",
          "measure_definition_name": "add_redirecting_bipv",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "155ee368-ae2f-4a82-af75-c2c89861cd62",
          "measure_definition_version_uuid": "07680941-e817-4db9-b9a5-e3ca53be605d",
          "uuid": "155ee368-ae2f-4a82-af75-c2c89861cd62",
          "version_uuid": "07680941-e817-4db9-b9a5-e3ca53be605d",
          "description": "Add 'UbiQD' PV technology to windows",
          "taxonomy": "Onsite Power Generation.Photovoltaic",
          "arguments": [
            {
              "display_name": "QD Surface Coverage",
              "display_name_short": "dot_coverage",
              "name": "dot_coverage",
              "value_type": "double",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "PV Efficiency",
              "display_name_short": "pv_eff",
              "name": "pv_eff",
              "value_type": "double",
              "default_value": 0.05,
              "value": 0.05
            },
            {
              "display_name": "Inverter Efficiency",
              "display_name_short": "inverter_eff",
              "name": "inverter_eff",
              "value_type": "double",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "SHGC Multiplier",
              "display_name_short": "shgc_mult",
              "name": "shgc_mult",
              "value_type": "double",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "Debug Mode",
              "display_name_short": "debug_mode",
              "name": "debug_mode",
              "value_type": "boolean",
              "default_value": false,
              "value": false
            }
          ],
          "variables": [
            {
              "argument": {
                "display_name": "facade",
                "display_name_short": "facade",
                "name": "facade",
                "value_type": "string",
                "default_value": "ESW",
                "value": "NONE",
                "choice_display_names": [
                  "N",
                  "E",
                  "S",
                  "W",
                  "ESW",
                  "ALL",
                  "NONE"
                ]
              },
              "display_name": "facade",
              "display_name_short": "facade",
              "variable_type": "variable",
              "minimum": "ESW",
              "maximum": "ESW",
              "static_value": "NONE",
              "uuid": "",
              "version_uuid": "",
              "variable": true,
              "uncertainty_description": {
                "type": "discrete",
                "attributes": [
                  {
                    "name": "discrete",
                    "values_and_weights": [
                      {
                        "value": "E",
                        "weight": 0.2
                      },
                      {
                        "value": "W",
                        "weight": 0.2
                      },
                      {
                        "value": "S",
                        "weight": 0.2
                      },
                      {
                        "value": "ESW",
                        "weight": 0.2
                      },
                      {
                        "value": "NONE",
                        "weight": 0.2
                      }
                    ]
                  },
                  {
                    "name": "lower_bounds",
                    "value": "ESW"
                  },
                  {
                    "name": "upper_bounds",
                    "value": "ESW"
                  },
                  {
                    "name": "modes",
                    "value": "ESW"
                  },
                  {
                    "name": "delta_x",
                    "value": "ESW"
                  },
                  {
                    "name": "stddev",
                    "value": "ESW"
                  }
                ]
              },
              "workflow_index": 0
            }
          ],
          "workflow_index": 3
        },
        {
          "name": "add_output_variable",
          "display_name": "Add Output Variable",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "AddOutputVariable",
          "measure_definition_directory": "./measures/AddOutputVariable",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\AddOutputVariable",
          "measure_definition_display_name": "Add Output Variable",
          "measure_definition_name": "add_output_variable",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "2a058afb-e349-49ae-a4bf-2c56a42b4352",
          "measure_definition_version_uuid": "4a3ec2bc-75b6-4224-948f-ef727c4a31a3",
          "uuid": "2a058afb-e349-49ae-a4bf-2c56a42b4352",
          "version_uuid": "4a3ec2bc-75b6-4224-948f-ef727c4a31a3",
          "description": "This measure adds an output variable at the requested reporting frequency.",
          "taxonomy": "Reporting.QAQC",
          "arguments": [
            {
              "display_name": "Enter Variable Name",
              "display_name_short": "variable_name",
              "name": "variable_name",
              "value_type": "string",
              "default_value": "Surface Window Thermochromic Layer Property Specification Temperature",
              "value": "Surface Window Thermochromic Layer Property Specification Temperature"
            },
            {
              "display_name": "Reporting Frequency",
              "display_name_short": "reporting_frequency",
              "name": "reporting_frequency",
              "value_type": "string",
              "default_value": "hourly",
              "value": "timestep"
            },
            {
              "display_name": "Enter Key Name",
              "display_name_short": "key_value",
              "name": "key_value",
              "value_type": "string",
              "default_value": "*",
              "value": "*"
            }
          ],
          "variables": [],
          "workflow_index": 4
        },
        {
          "name": "add_output_variable_2",
          "display_name": "Add Output Variable 2",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "AddOutputVariable",
          "measure_definition_directory": "./measures/AddOutputVariable",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\AddOutputVariable",
          "measure_definition_display_name": "Add Output Variable 2",
          "measure_definition_name": "add_output_variable_2",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "2a058afb-e349-49ae-a4bf-2c56a42b4352",
          "measure_definition_version_uuid": "4a3ec2bc-75b6-4224-948f-ef727c4a31a3",
          "uuid": "2a058afb-e349-49ae-a4bf-2c56a42b4352",
          "version_uuid": "4a3ec2bc-75b6-4224-948f-ef727c4a31a3",
          "description": "This measure adds an output variable at the requested reporting frequency.",
          "taxonomy": "Reporting.QAQC",
          "arguments": [
            {
              "display_name": "Enter Variable Name",
              "display_name_short": "variable_name",
              "name": "variable_name",
              "value_type": "string",
              "default_value": "Surface Outside Face Beam Solar Incident Angle Cosine Value",
              "value": "Surface Outside Face Beam Solar Incident Angle Cosine Value"
            },
            {
              "display_name": "Reporting Frequency",
              "display_name_short": "reporting_frequency",
              "name": "reporting_frequency",
              "value_type": "string",
              "default_value": "hourly",
              "value": "timestep"
            },
            {
              "display_name": "Enter Key Name",
              "display_name_short": "key_value",
              "name": "key_value",
              "value_type": "string",
              "default_value": "*",
              "value": "*"
            }
          ],
          "variables": [],
          "workflow_index": 5
        },
        {
          "name": "add_output_variable_2_2",
          "display_name": "Add Output Variable 2 2",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "AddOutputVariable",
          "measure_definition_directory": "./measures/AddOutputVariable",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\AddOutputVariable",
          "measure_definition_display_name": "Add Output Variable 2 2",
          "measure_definition_name": "add_output_variable_2_2",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "2a058afb-e349-49ae-a4bf-2c56a42b4352",
          "measure_definition_version_uuid": "4a3ec2bc-75b6-4224-948f-ef727c4a31a3",
          "uuid": "2a058afb-e349-49ae-a4bf-2c56a42b4352",
          "version_uuid": "4a3ec2bc-75b6-4224-948f-ef727c4a31a3",
          "description": "This measure adds an output variable at the requested reporting frequency.",
          "taxonomy": "Reporting.QAQC",
          "arguments": [
            {
              "display_name": "Enter Variable Name",
              "display_name_short": "variable_name",
              "name": "variable_name",
              "value_type": "string",
              "default_value": "Generator Produced DC Electric Energy",
              "value": "Generator Produced DC Electric Energy"
            },
            {
              "display_name": "Reporting Frequency",
              "display_name_short": "reporting_frequency",
              "name": "reporting_frequency",
              "value_type": "string",
              "default_value": "hourly",
              "value": "hourly"
            },
            {
              "display_name": "Enter Key Name",
              "display_name_short": "key_value",
              "name": "key_value",
              "value_type": "string",
              "default_value": "*",
              "value": "*"
            }
          ],
          "variables": [],
          "workflow_index": 6
        },
        {
          "name": "add_output_variable_2_2_2",
          "display_name": "Add Output Variable 2 2 2",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "AddOutputVariable",
          "measure_definition_directory": "./measures/AddOutputVariable",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\AddOutputVariable",
          "measure_definition_display_name": "Add Output Variable 2 2 2",
          "measure_definition_name": "add_output_variable_2_2_2",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "2a058afb-e349-49ae-a4bf-2c56a42b4352",
          "measure_definition_version_uuid": "4a3ec2bc-75b6-4224-948f-ef727c4a31a3",
          "uuid": "2a058afb-e349-49ae-a4bf-2c56a42b4352",
          "version_uuid": "4a3ec2bc-75b6-4224-948f-ef727c4a31a3",
          "description": "This measure adds an output variable at the requested reporting frequency.",
          "taxonomy": "Reporting.QAQC",
          "arguments": [
            {
              "display_name": "Enter Variable Name",
              "display_name_short": "variable_name",
              "name": "variable_name",
              "value_type": "string",
              "default_value": "Generator Produced DC Electric Energy",
              "value": "Generator Produced DC Electric Energy"
            },
            {
              "display_name": "Reporting Frequency",
              "display_name_short": "reporting_frequency",
              "name": "reporting_frequency",
              "value_type": "string",
              "default_value": "hourly",
              "value": "monthly"
            },
            {
              "display_name": "Enter Key Name",
              "display_name_short": "key_value",
              "name": "key_value",
              "value_type": "string",
              "default_value": "*",
              "value": "*"
            }
          ],
          "variables": [],
          "workflow_index": 7
        },
        {
          "name": "add_output_variable_2_2_2_2",
          "display_name": "Add Output Variable 2 2 2 2",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "AddOutputVariable",
          "measure_definition_directory": "./measures/AddOutputVariable",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\AddOutputVariable",
          "measure_definition_display_name": "Add Output Variable 2 2 2 2",
          "measure_definition_name": "add_output_variable_2_2_2_2",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "2a058afb-e349-49ae-a4bf-2c56a42b4352",
          "measure_definition_version_uuid": "4a3ec2bc-75b6-4224-948f-ef727c4a31a3",
          "uuid": "2a058afb-e349-49ae-a4bf-2c56a42b4352",
          "version_uuid": "4a3ec2bc-75b6-4224-948f-ef727c4a31a3",
          "description": "This measure adds an output variable at the requested reporting frequency.",
          "taxonomy": "Reporting.QAQC",
          "arguments": [
            {
              "display_name": "Enter Variable Name",
              "display_name_short": "variable_name",
              "name": "variable_name",
              "value_type": "string",
              "default_value": "Lights Electric Energy",
              "value": "Lights Electric Energy"
            },
            {
              "display_name": "Reporting Frequency",
              "display_name_short": "reporting_frequency",
              "name": "reporting_frequency",
              "value_type": "string",
              "default_value": "hourly",
              "value": "hourly"
            },
            {
              "display_name": "Enter Key Name",
              "display_name_short": "key_value",
              "name": "key_value",
              "value_type": "string",
              "default_value": "*",
              "value": "*"
            }
          ],
          "variables": [],
          "workflow_index": 8
        },
        {
          "name": "add_output_variable_2_2_2_2_2",
          "display_name": "Add Output Variable 2 2 2 2 2",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "AddOutputVariable",
          "measure_definition_directory": "./measures/AddOutputVariable",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\AddOutputVariable",
          "measure_definition_display_name": "Add Output Variable 2 2 2 2 2",
          "measure_definition_name": "add_output_variable_2_2_2_2_2",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "2a058afb-e349-49ae-a4bf-2c56a42b4352",
          "measure_definition_version_uuid": "4a3ec2bc-75b6-4224-948f-ef727c4a31a3",
          "uuid": "2a058afb-e349-49ae-a4bf-2c56a42b4352",
          "version_uuid": "4a3ec2bc-75b6-4224-948f-ef727c4a31a3",
          "description": "This measure adds an output variable at the requested reporting frequency.",
          "taxonomy": "Reporting.QAQC",
          "arguments": [
            {
              "display_name": "Enter Variable Name",
              "display_name_short": "variable_name",
              "name": "variable_name",
              "value_type": "string",
              "default_value": "Lights Electric Energy",
              "value": "Lights Electric Energy"
            },
            {
              "display_name": "Reporting Frequency",
              "display_name_short": "reporting_frequency",
              "name": "reporting_frequency",
              "value_type": "string",
              "default_value": "hourly",
              "value": "monthly"
            },
            {
              "display_name": "Enter Key Name",
              "display_name_short": "key_value",
              "name": "key_value",
              "value_type": "string",
              "default_value": "*",
              "value": "*"
            }
          ],
          "variables": [],
          "workflow_index": 9
        },
        {
          "name": "add_meter",
          "display_name": "Add Meter",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "AddMeter",
          "measure_definition_directory": "./measures/AddMeter",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\AddMeter",
          "measure_definition_display_name": "Add Meter",
          "measure_definition_name": "add_meter",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "ad4015f2-6d1d-4bb2-84b1-db47bc67a5b2",
          "measure_definition_version_uuid": "deeace3c-39e7-4a82-aba8-e19e9a63f13a",
          "uuid": "ad4015f2-6d1d-4bb2-84b1-db47bc67a5b2",
          "version_uuid": "deeace3c-39e7-4a82-aba8-e19e9a63f13a",
          "description": "This measure adds an meter at the requested reporting frequency.",
          "taxonomy": "Reporting.QAQC",
          "arguments": [
            {
              "display_name": "Enter Meter Name",
              "display_name_short": "meter_name",
              "name": "meter_name",
              "value_type": "string",
              "default_value": "Electricity:Facility",
              "value": "Electricity:Facility"
            },
            {
              "display_name": "Reporting Frequency",
              "display_name_short": "reporting_frequency",
              "name": "reporting_frequency",
              "value_type": "string",
              "default_value": "hourly",
              "value": "monthly"
            }
          ],
          "variables": [],
          "workflow_index": 10
        },
        {
          "name": "add_meter_2",
          "display_name": "Add Meter 2",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "AddMeter",
          "measure_definition_directory": "./measures/AddMeter",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\AddMeter",
          "measure_definition_display_name": "Add Meter 2",
          "measure_definition_name": "add_meter_2",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "ad4015f2-6d1d-4bb2-84b1-db47bc67a5b2",
          "measure_definition_version_uuid": "deeace3c-39e7-4a82-aba8-e19e9a63f13a",
          "uuid": "ad4015f2-6d1d-4bb2-84b1-db47bc67a5b2",
          "version_uuid": "deeace3c-39e7-4a82-aba8-e19e9a63f13a",
          "description": "This measure adds an meter at the requested reporting frequency.",
          "taxonomy": "Reporting.QAQC",
          "arguments": [
            {
              "display_name": "Enter Meter Name",
              "display_name_short": "meter_name",
              "name": "meter_name",
              "value_type": "string",
              "default_value": "Electricity:Facility",
              "value": "Gas:Facility"
            },
            {
              "display_name": "Reporting Frequency",
              "display_name_short": "reporting_frequency",
              "name": "reporting_frequency",
              "value_type": "string",
              "default_value": "hourly",
              "value": "monthly"
            }
          ],
          "variables": [],
          "workflow_index": 11
        },
        {
          "name": "inject_idf_window_objects",
          "display_name": " Inject IDF Window Objects",
          "measure_type": "EnergyPlusMeasure",
          "measure_definition_class_name": "InjectIDFWindowObjects",
          "measure_definition_directory": "./measures/inject_idf_window_objects",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\inject_idf_window_objects",
          "measure_definition_display_name": " Inject IDF Window Objects",
          "measure_definition_name": "inject_idf_window_objects",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "dab2fd51-4fbb-44fa-9e6d-aac75561c934",
          "measure_definition_version_uuid": "9f627ba0-2d36-4f96-a1ef-8a776059dfb3",
          "uuid": "dab2fd51-4fbb-44fa-9e6d-aac75561c934",
          "version_uuid": "9f627ba0-2d36-4f96-a1ef-8a776059dfb3",
          "description": "This measure allows you to inject IDF objects into an OSM generated IDF prior to passing the IDF off to EnergyPlus.",
          "taxonomy": "Whole Building.Space Types",
          "arguments": [
            {
              "display_name": "Thermochromic window?",
              "display_name_short": "thermochromic",
              "name": "thermochromic",
              "value_type": "boolean",
              "default_value": false,
              "value": true
            },
            {
              "display_name": "Choice of window",
              "display_name_short": "choice",
              "name": "choice",
              "value_type": "string",
              "default_value": "All fenestration surfaces",
              "value": "All fenestration surfaces"
            }
          ],
          "variables": [
            {
              "argument": {
                "display_name": "Choice of IGU",
                "display_name_short": "glztype",
                "name": "glztype",
                "value_type": "string",
                "default_value": "Baseline_ASHRAE",
                "value": "VeryHot_SwitchGlaze",
                "choice_display_names": [
                  "Baseline_ASHRAE",
                  "Baseline_GlzSys6",
                  "Baseline_GlzSys13",
                  "Baseline_GlzSys15",
                  "Baseline_GlzSys6_13",
                  "Baseline_GlzSys15_withPV",
                  "GlzSys_6_withoutPV",
                  "GlzSys_13_withoutPV",
                  "GlzSys_6_withPV",
                  "GlzSys_13_withPV",
                  "GlzSys_Dark",
                  "GlzSys_Light",
                  "GlzSys_Thermochromic_40C",
                  "GlzSys_Thermochromic_35C",
                  "GlzSys_Thermochromic_30C",
                  "FrameTest_woFrame",
                  "FrameTest_wFrame",
                  "VeryHot_ASHRAE",
                  "VeryHot_SwitchGlaze",
                  "VeryHot_Dark",
                  "VeryHot_Light",
                  "Hot_ASHRAE",
                  "Hot_SwitchGlaze",
                  "Hot_Dark",
                  "Hot_Light",
                  "Cold_ASHRAE",
                  "Cold_SwitchGlaze",
                  "Cold_Dark",
                  "Cold_Light",
                  "VeryCold_ASHRAE",
                  "VeryCold_SwitchGlaze",
                  "VeryCold_Dark",
                  "VeryCold_Light"
                ]
              },
              "display_name": "Choice of IGU",
              "display_name_short": "glztype",
              "variable_type": "variable",
              "units": "",
              "minimum": "Baseline_ASHRAE",
              "maximum": "Baseline_ASHRAE",
              "static_value": "VeryHot_SwitchGlaze",
              "uuid": "",
              "version_uuid": "",
              "variable": true,
              "uncertainty_description": {
                "type": "discrete",
                "attributes": [
                  {
                    "name": "discrete",
                    "values_and_weights": [
                      {
                        "value": "VeryHot_SwitchGlaze",
                        "weight": 0.25
                      },
                      {
                        "value": "Hot_SwitchGlaze",
                        "weight": 0.25
                      },
                      {
                        "value": "Cold_SwitchGlaze",
                        "weight": 0.25
                      },
                      {
                        "value": "VeryCold_SwitchGlaze",
                        "weight": 0.25
                      }
                    ]
                  },
                  {
                    "name": "lower_bounds",
                    "value": "Baseline_ASHRAE"
                  },
                  {
                    "name": "upper_bounds",
                    "value": "Baseline_ASHRAE"
                  },
                  {
                    "name": "modes",
                    "value": "Baseline_ASHRAE"
                  },
                  {
                    "name": "delta_x",
                    "value": "Baseline_ASHRAE"
                  },
                  {
                    "name": "stddev",
                    "value": "Baseline_ASHRAE"
                  }
                ]
              },
              "workflow_index": 0
            },
            {
              "argument": {
                "display_name": "Thermochromic window switching temperature based on outermost window surface temperature",
                "display_name_short": "t_switching",
                "name": "t_switching",
                "value_type": "double",
                "default_value": 35,
                "value": 35
              },
              "display_name": "Thermochromic window switching temperature based on outermost window surface temperature",
              "display_name_short": "t_switching",
              "variable_type": "variable",
              "units": "C",
              "minimum": 35,
              "maximum": 35,
              "static_value": 35,
              "uuid": "",
              "version_uuid": "",
              "variable": true,
              "uncertainty_description": {
                "type": "discrete",
                "attributes": [
                  {
                    "name": "discrete",
                    "values_and_weights": [
                      {
                        "value": 10,
                        "weight": 0.2
                      },
                      {
                        "value": 20,
                        "weight": 0.2
                      },
                      {
                        "value": 30,
                        "weight": 0.2
                      },
                      {
                        "value": 40,
                        "weight": 0.2
                      },
                      {
                        "value": 50,
                        "weight": 0.2
                      }
                    ]
                  },
                  {
                    "name": "lower_bounds",
                    "value": 35
                  },
                  {
                    "name": "upper_bounds",
                    "value": 35
                  },
                  {
                    "name": "modes",
                    "value": 35
                  },
                  {
                    "name": "delta_x",
                    "value": 35
                  },
                  {
                    "name": "stddev",
                    "value": 35
                  }
                ]
              },
              "workflow_index": 1
            }
          ],
          "workflow_index": 12
        },
        {
          "name": "export_variableto_csv_variables_for_bipvpce",
          "display_name": "ExportVariabletoCSV_VariablesForBIPV_PCE",
          "measure_type": "ReportingMeasure",
          "measure_definition_class_name": "ExportVariabletoCSVVariablesForBIPVPCE",
          "measure_definition_directory": "./measures/export_variableto_csv_variables_for_bipvpce",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\export_variableto_csv_variables_for_bipvpce",
          "measure_definition_display_name": "ExportVariabletoCSV_VariablesForBIPV_PCE",
          "measure_definition_name": "export_variableto_csv_variables_for_bipvpce",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "c86cdcc1-f9e4-4139-ad31-47f3a1ba6e4c",
          "measure_definition_version_uuid": "7b845047-75f0-401b-a616-da1c696e7c16",
          "uuid": "c86cdcc1-f9e4-4139-ad31-47f3a1ba6e4c",
          "version_uuid": "7b845047-75f0-401b-a616-da1c696e7c16",
          "description": "Exports window's thermochromic specification temperature and incident angle data to a csv file. Associated vertices information are also saved in the csv file.",
          "taxonomy": "Reporting.QAQC",
          "arguments": [
            {
              "display_name": "Enter First Variable Name.",
              "display_name_short": "variable_name_first",
              "name": "variable_name_first",
              "value_type": "string",
              "default_value": "Surface Window Thermochromic Layer Property Specification Temperature",
              "value": "Surface Window Thermochromic Layer Property Specification Temperature"
            },
            {
              "display_name": "Enter Second Variable Name.",
              "display_name_short": "variable_name_second",
              "name": "variable_name_second",
              "value_type": "string",
              "default_value": "Surface Outside Face Beam Solar Incident Angle Cosine Value",
              "value": "Surface Outside Face Beam Solar Incident Angle Cosine Value"
            },
            {
              "display_name": "Reporting Frequency.",
              "display_name_short": "reporting_frequency",
              "name": "reporting_frequency",
              "value_type": "string",
              "default_value": "Zone Timestep",
              "value": "Zone Timestep"
            }
          ],
          "variables": [],
          "workflow_index": 13
        },
        {
          "name": "window_pv_reporting",
          "display_name": "WindowPV Reporting",
          "measure_type": "ReportingMeasure",
          "measure_definition_class_name": "WindowPVReporting",
          "measure_definition_directory": "./measures/WindowPV_reporting",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\WindowPV_reporting",
          "measure_definition_display_name": "WindowPV Reporting",
          "measure_definition_name": "window_pv_reporting",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "431bcf0c-88e8-43be-97f6-40b274da8bd3",
          "measure_definition_version_uuid": "981d630c-3c6a-4375-a810-693770d66931",
          "uuid": "431bcf0c-88e8-43be-97f6-40b274da8bd3",
          "version_uuid": "981d630c-3c6a-4375-a810-693770d66931",
          "description": "Report PV",
          "taxonomy": "Reporting.QAQC",
          "arguments": [],
          "variables": [],
          "workflow_index": 14
        },
        {
          "name": "server_directory_cleanup",
          "display_name": "Server Directory Cleanup",
          "measure_type": "ReportingMeasure",
          "measure_definition_class_name": "ServerDirectoryCleanup",
          "measure_definition_directory": "./measures/ServerDirectoryCleanup",
          "measure_definition_directory_local": "C:\\Users\\JKIM4\\Documents\\GitHub\\SG_OptT_SG\\measures\\ServerDirectoryCleanup",
          "measure_definition_display_name": "Server Directory Cleanup",
          "measure_definition_name": "server_directory_cleanup",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "ec7d04ad-0b7b-495b-825a-e1b6d28d1d3f",
          "measure_definition_version_uuid": "636bd688-3bd1-439e-899f-507e09692c6e",
          "uuid": "ec7d04ad-0b7b-495b-825a-e1b6d28d1d3f",
          "version_uuid": "636bd688-3bd1-439e-899f-507e09692c6e",
          "description": "Removes a significant portion of the saved results from each run, helping to alleviate memory problems.",
          "taxonomy": "Calibration",
          "arguments": [
            {
              "display_name": "Remove sql files from run directory",
              "display_name_short": "sql",
              "name": "sql",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Remove eso files from run directory",
              "display_name_short": "eso",
              "name": "eso",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Remove audit files from run directory",
              "display_name_short": "audit",
              "name": "audit",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Remove osm files from run directory",
              "display_name_short": "osm",
              "name": "osm",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Remove idf files from run directory",
              "display_name_short": "idf",
              "name": "idf",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Remove bnd files from run directory",
              "display_name_short": "bnd",
              "name": "bnd",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Remove eio files from run directory",
              "display_name_short": "eio",
              "name": "eio",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Remove shd files from run directory",
              "display_name_short": "shd",
              "name": "shd",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Remove mdd files from run directory",
              "display_name_short": "mdd",
              "name": "mdd",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Remove rdd files from run directory",
              "display_name_short": "rdd",
              "name": "rdd",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Remove csv files from run directory",
              "display_name_short": "csv",
              "name": "csv",
              "value_type": "boolean",
              "default_value": true,
              "value": false
            },
            {
              "display_name": "Remove Sizing Run Directories files from run directory",
              "display_name_short": "Sizing Run Directories",
              "name": "Sizing Run Directories",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            }
          ],
          "variables": [],
          "workflow_index": 15
        }
      ],
      "algorithm": {
        "experiment_type": "full_factorial",
        "number_of_samples": 2,
        "seed": null,
        "failed_f_value": 1000000000000000000,
        "debug_messages": 0,
        "objective_functions": []
      },
      "analysis_type": "doe"
    },
    "seed": {
      "file_type": "OSM",
      "path": "./seeds/switchglaze.osm"
    },
    "weather_file": {
      "file_type": "EPW",
      "path": "./weather/DEU_Hamburg.101470_IWEC.epw"
    },
    "file_format_version": 1,
    "server_scripts": {}
  }
}